(2020-07-11) TODO:
    * header row in csv Business doesn't have quotes
    * "Return Address Filing Mailing Street Address (2" is missing the last paran 
    * use sentence case for first and last name for all positions, i.e. Steve not STEVE
    * use sentence case for "Authorized Peson Signer Title" i.e. "Governer"
    *  "Return Address for Filing Attention Email" is missing @ and . in the email
    *  "Registered Agent Email" is missing @ and . in email
    * Registered Agent First and Last Name sentence case, i.e. Steve not STEVE
    * Sentence case for "Governor Type" and add space for "GOVERNINGPERSON" i.e. "Governing Person"
    * Check all zip codes for trailing '-' i.e. convert  "98264 - " to  "98264"
    * Principal Office Email is missing @ and . 
    * switch the file name to be [company]-date-time.csv, so all companies are grouped together

    Other:
    keywordsFetch duplicates code instead of inheriting or calling fetchTable, however fetchTable appears to be the same
    added a new name in the keywords.json file, fetch - which provides the keywords file from a remote location, you need to ignore this for now


cli arguments:
    [] search contains (active)
    [] search format in keywords.json
    [] output keywords-filename with aggregate entities in csv
    [] proxy credentials to .env file and proxy.json file
    [] concurrency, no of concurrent http threads

    to use a directory with keyword_group.json files:
    yarn start ./dist/scraper --concurrency 25 --keywords ./keywords --output ./csv-output --verbosity DEBUG --proxy

    to use business types:
    yarn start ./dist/scraper --concurrency 25 --business_type ALL --output ./csv-output --verbosity DEBUG --proxy

commands to convert keywords.json to alpha sort list:
- cat keywords.json | sed "s/[\",]//g" > naked_keywords     
- sort -u naked_keywords | awk '{$1=$1};1' > keywords_alpha
- 

[] summary of each keyword/file and estimate in fetches
[] template logging, threads, forever and cron parameters
[] template lawyer scraper cli
[] template corporation scraper cli
[] template logging

[] serialize content into mongodb
[] mongodb, folder serialize objects
[] express routes for search, statstics, Rest API
[] express front-end, number of companies per type, top 25 keywords in business purpose
[] search box for first, last name, business purpose, results grid
[] highlight company detail expands from right drawer

* mongo/mongoose schema
* corporate collection schema
* index names and business purpose
* test for running against entire db, return timing
* schedule to update records, scheme to update records
* express front-end
* ant design style / css
* title wa corporation type: count
* wordcloud for business purpose
* search by name
* search by business purpose
* save contact / company csv

[] express routes
    * /search
    * /statistics
    * /wacorp?id=
    * /keyword?search=

convert code to typescript completely

